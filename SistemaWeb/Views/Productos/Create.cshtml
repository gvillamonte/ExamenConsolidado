@model SistemaWeb.Models.Productos

@{
    ViewBag.Title = "Agregar Producto";
}

<div class="card shadow-sm mt-4">
    <div class="card-header bg-success text-white">
        <h4 class="mb-0"><i class="fa-solid fa-boxes-stacked"></i> Agregar Producto</h4>
    </div>
    <div class="card-body">

        @using (Html.BeginForm())
        {
            @Html.AntiForgeryToken()

            @Html.ValidationSummary(true, "", new { @class = "alert alert-danger" })

            <div class="mb-3">
                @Html.LabelFor(model => model.Nombre, "Nombre del producto", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.Nombre, new { htmlAttributes = new { @class = "form-control", placeholder = "Ingrese el nombre..." } })
                @Html.ValidationMessageFor(model => model.Nombre, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Precio, "Precio", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.Precio, new { htmlAttributes = new { @class = "form-control", placeholder = "0.00" } })
                @Html.ValidationMessageFor(model => model.Precio, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.Stock, "Stock disponible", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.EditorFor(model => model.Stock, new { htmlAttributes = new { @class = "form-control", placeholder = "Cantidad en stock" } })
                @Html.ValidationMessageFor(model => model.Stock, "", new { @class = "text-danger" })
            </div>

            <div class="mb-3">
                @Html.LabelFor(model => model.CategoriaId, "Categoría", htmlAttributes: new { @class = "form-label fw-bold" })
                @Html.DropDownList("CategoriaId", null, "-- Seleccione una categoría --", new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
            </div>

            <div class="d-flex justify-content-between">
                @Html.ActionLink(" Cancelar", "Index", null, new { @class = "btn btn-secondary fa-solid fa-arrow-left" })
                <button type="submit" class="btn btn-success fa-solid fa-floppy-disk">
                    Guardar
                </button>
            </div>
        }
    </div>
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
